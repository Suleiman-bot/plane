services:
  frontend:
    build:
      context: /home/abdul/projects/ticketing-form
      dockerfile: Dockerfile.dev
    container_name: frontend
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - REACT_APP_API_URL=http://localhost
    ports:
      - "3000:3000"
    networks:
      - plane-net
    volumes:
      - /home/abdul/projects/ticketing-form:/app
      - /app/node_modules

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.node
    restart: always
    env_file:
      - ./apps/api/.env
    ports:
      - "8000:8000"
    networks:
      - plane-net
    command: > 
     node server.js
  plane-db:
    container_name: plane-db
    image: postgres:15.7-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - plane-net

  plane-redis:
    container_name: plane-redis
    image: valkey/valkey:7.2.5-alpine
    restart: always
    volumes:
      - redisdata:/data
    networks:
      - plane-net

  proxy:
   container_name: proxy
   image: my-caddy:plane            # <â€” use your custom image/tag
   restart: always
   ports:
    - "${LISTEN_HTTP_PORT:-80}:80"
    - "${LISTEN_HTTPS_PORT:-443}:443"
   volumes:
    - ./apps/proxy/Caddyfile.ce:/etc/caddy/Caddyfile:ro
    - caddy_data:/data
    - caddy_config:/config
   networks:
    - plane-net
   depends_on:
    - frontend
    - api
    # add others if you have them: space, admin, live, plane-minio

volumes:
  pgdata:
  redisdata:
  caddy_data:
  caddy_config:

networks:
  plane-net:
    external: true
